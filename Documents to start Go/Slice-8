-> In this section we will go in deep dive in slice.

-------------------------
	Slice in Go
-------------------------
-> Slice are very similar to array.
-> It is dynamic in nature, you can resize is.
-> It is commonly used in Go, because of flexible in size, light weighted, powerful and convenient.
-> Slice and array connected with each other, a slice is a reference to an underlying data structure.
-> The first index position in a slice is always zero & last one will be length of slice - 1.
-> We can create slice from array. Let see below
	Example :
		array := [5]int{1, 2, 3, 4, 5}
		slice := array[1:4]
	
		fmt.Println("Array : ", array)
		fmt.Println("Slice : ", slice)

-> Since slice are dynamic, which means that we can change their slice. Go provides many in build function to alter size. Like append, copy & delete.
-> Check below example to modify slice size.
	Example :
		slice := []int{1,2,3,4,5}
		slice = append(slice, 6,7,8,9)

-------------------------
	Declaration of Slice
-------------------------
-> A slice is declared just like an array, but it doesn’t contain the size of the slice. So it can grow or shrink according to the requirement.
-> Here are multiple ways to declare slice in go. Let's explore one by one.
->